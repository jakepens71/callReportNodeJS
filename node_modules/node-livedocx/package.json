{
  "author": {
    "name": "Tim de Koning",
    "email": "node-livedocx@kingsquare.nl"
  },
  "name": "node-livedocx",
  "description": "Generate PDF and Word documents from template, using node.js and the livedocx webservice",
  "version": "0.0.5",
  "keywords": [
    "pdf",
    "word",
    "office",
    "generate",
    "document",
    "mailmerge"
  ],
  "dependencies": {
    "underscore": "1.4.4",
    "soap": "0.2.7",
    "async": "0.2.7"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kingsquare/node-livedocx.git"
  },
  "readme": "Generate PDF using Word templates and node.js\n=============================================\n\nNode-livedocx allows developers to generate documents by combining structured data from node.js with a template, created\nin a word processor. The resulting document can be saved as a PDF, DOCX, DOC or RTF file. The concept is the same as\nwith mail-merge.\n\nThis library may be used as 'middleware': just pass a callback function. Any error in the generation process will be\npropagated as the first argument of the callback function. See example below.\n\n\nExample\n-------\n\n```js\nvar fs = require('fs'), livedocx = require('node-livedocx'), options;\n\noptions = {\n    template: fs.readFileSync('my_template.docx').toString('base64'),\n    variables: {\n        foo: 'bar',\n        something: 'else'\n        ...\n    },\n    ...\n}\n\nlivedocx(options, function (err,  resultBuffer) {\n    if (err) {\n        return console.log('Something went wrong!', err);\n    }\n    fs.writeFile('result.pdf', resultBuffer);\n});\n```\n\nUsage\n-----\n\n**Step 1**: Sign up for an account\n\nBefore you can start using LiveDocx, you must first sign up for an account, see:\n\nhttps://www.livedocx.com/user/account_registration.aspx\n\n(250 free documents per day, see http://www.livedocx.com/pub/pricing for additional plans)\n\n**Step 2**: Install node-livedocx.\n\nrun `npm install node-livedocx`\n\n**Step 3**: Assign your options (username, password, template and variables) and your callback function.\n\nThe callback function receives any errors and a Buffer-object for the resulting document.\n\nSee [example/index.js](https://github.com/kingsquare/node-livedocx/blob/master/example/index.js) for a full example on how to set these variables properly\n\n**Step 4**: Learn more\n\nFor more information on template options, see http://www.livedocx.com/pub/documentation/templates.aspx\n\nFor more information on the used web service, see http://www.livedocx.com/pub/documentation/api.aspx\n\n\nOptions\n-------\n\n```js\n{\n    username: 'my_username', // REQUIRED: your username @ http://www.livedocx.com/\n    password: 'my_password', // REQUIRED: your password @ http://www.livedocx.com/\n    template: 'SGVsbG8gV29ybGQ=......', // REQUIRED:  A base64 encoded string version of a binary file, see example/index.js for an example\n    templateFormat: 'DOCX', // Default: DOCX. Describe the type of template used. May be one of DOCX, DOC, RTF\n    resultFormat: 'PDF', // Default: PDF. Describe the type of result document. May be one of DOCX, DOC, RTF and PDF\n    variables: {\n        foo: 'bar', //all your document variables\n        ...\n    }\n}\n```\n\nDISCLAIMER\n----------\n\nThe author is not in any way related to the Livedocx service or the company behind that service.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/kingsquare/node-livedocx/issues"
  },
  "_id": "node-livedocx@0.0.5",
  "_from": "node-livedocx@"
}
